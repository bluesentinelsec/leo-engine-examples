name: Web Build

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  web-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            build-essential cmake git python3 python3-pip \
            curl pkg-config zip

      # Cache Emscripten SDK
      - name: Cache emsdk
        uses: actions/cache@v4
        with:
          path: $HOME/emsdk
          key: emsdk-cache-${{ runner.os }}-latest
          restore-keys: |
            emsdk-cache-${{ runner.os }}-

      # Install Emscripten SDK (if not cached)
      - name: Install Emscripten
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/emscripten-core/emsdk.git $HOME/emsdk
          cd $HOME/emsdk
          ./emsdk install latest
          ./emsdk activate latest
        shell: bash

      # Setup environment
      - name: Setup environment
        run: |
          echo "EMSDK=$HOME/emsdk" >> $GITHUB_ENV
          echo "PATH=$HOME/emsdk:$HOME/emsdk/upstream/emscripten:$PATH" >> $GITHUB_ENV
          echo "EM_CONFIG=$HOME/emsdk/.emscripten" >> $GITHUB_ENV
          echo "EM_CACHE=$HOME/emsdk/.emscripten_cache" >> $GITHUB_ENV

      # Build with Emscripten
      - name: Build project
        run: |
          emcmake cmake -B build -S . -DCMAKE_BUILD_TYPE=Release \
            -DLEO_BUILD_SHARED=OFF \
            -DLEO_BUILD_TESTS=OFF
          cmake --build build --parallel

      # Prepare web output
      - name: Package webdist
        run: |
          mkdir -p webdist
          cp build/leo-engine-showcase.html webdist/index.html
          cp build/leo-engine-showcase.js webdist/
          cp build/leo-engine-showcase.wasm webdist/
          if [ -f resources.leopack ]; then
              cp resources.leopack webdist/
          elif [ -d resources ]; then
              cp -r resources webdist/
          fi
          zip -r webdist.zip webdist

      # Upload artifact
      - name: Upload web build
        uses: actions/upload-artifact@v4
        with:
          name: webdist
          path: webdist.zip

