name: Build & Run Leo Engine Showcase

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  macos:
    name: macOS (Universal, Release)
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Configure arm64
        run: >
          cmake -S . -B build-arm64
          -G Ninja
          -DCMAKE_BUILD_TYPE=Release
          -DLEO_BUILD_SHARED=ON
          -DLEO_BUILD_TESTS=OFF
          -DCMAKE_OSX_ARCHITECTURES=arm64

      - name: Build arm64
        run: cmake --build build-arm64 --parallel

      - name: Configure x86_64
        run: >
          cmake -S . -B build-x86_64
          -G Ninja
          -DCMAKE_BUILD_TYPE=Release
          -DLEO_BUILD_SHARED=ON
          -DLEO_BUILD_TESTS=OFF
          -DCMAKE_OSX_ARCHITECTURES=x86_64

      - name: Build x86_64
        run: cmake --build build-x86_64 --parallel

      - name: Create Universal App Bundle
        run: |
          set -eux
          ARM64_APP=build-arm64/leo-engine-showcase.app
          X86_APP=build-x86_64/leo-engine-showcase.app
          OUT_APP=build-universal/leo-engine-showcase.app

          rm -rf build-universal
          mkdir -p build-universal
          cp -R "$ARM64_APP" "$OUT_APP"

          lipo -create -output "$OUT_APP/Contents/MacOS/leo-engine-showcase" \
            "$ARM64_APP/Contents/MacOS/leo-engine-showcase" \
            "$X86_APP/Contents/MacOS/leo-engine-showcase"

          for LIB in "$ARM64_APP/Contents/Frameworks/"*.dylib; do
            LIBNAME=$(basename "$LIB")
            lipo -create -output "$OUT_APP/Contents/Frameworks/$LIBNAME" \
              "$ARM64_APP/Contents/Frameworks/$LIBNAME" \
              "$X86_APP/Contents/Frameworks/$LIBNAME"
          done

      - name: Run Showcase (Universal)
        run: ./build-universal/leo-engine-showcase.app/Contents/MacOS/leo-engine-showcase --all --cicd

      - name: Package macOS Universal App Bundle
        run: |
          cd build-universal
          # inner zip (the actual app bundle)
          zip -r leo-engine-showcase-macOS-universal.zip leo-engine-showcase.app

      - name: Upload macOS Universal App Bundle
        uses: actions/upload-artifact@v4
        with:
          # outer zip (GitHub artifact)
          name: leo-engine-showcase-macOS
          path: build-universal/leo-engine-showcase-macOS-universal.zip

  windows-msvc:
    name: Windows (x64, MSVC, Release)
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4

      - name: Configure
        shell: pwsh
        run: >
          cmake -S . -B build
          -G "Visual Studio 17 2022" -A x64
          -DCMAKE_BUILD_TYPE=Release
          -DLEO_BUILD_SHARED=ON
          -DLEO_BUILD_TESTS=OFF

      - name: Build
        shell: pwsh
        run: cmake --build build --config Release --parallel

      - name: Run Showcase
        shell: pwsh
        run: .\build\Release\leo-engine-showcase.exe --all --cicd

      - name: Package Windows Release
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path release\leo-engine-showcase-Windows | Out-Null
          Copy-Item -Recurse -Force build\leo-engine-showcase.Windows.Release\* release\leo-engine-showcase-Windows\
          $zipName = "leo-engine-showcase-Windows-msvc-amd64.zip"
          Compress-Archive -Path release\leo-engine-showcase-Windows -DestinationPath $zipName -Force

      - name: Upload Windows Release Package
        uses: actions/upload-artifact@v4
        with:
          name: leo-engine-showcase-Windows
          path: leo-engine-showcase-Windows-msvc-amd64.zip

  debian11-gcc:
    name: Debian 11 (x64, gcc, Release)
    runs-on: ubuntu-latest
    container:
      image: debian:11
    steps:
      - name: Install toolchain and deps
        run: |
          set -eux
          apt-get update
          apt-get install -y \
            build-essential pkg-config git ca-certificates wget \
            ninja-build libsdl2-dev xvfb xauth
          update-ca-certificates

          # Install a newer CMake (3.25+)
          wget -qO cmake.sh https://github.com/Kitware/CMake/releases/download/v3.27.9/cmake-3.27.9-linux-x86_64.sh
          bash cmake.sh --skip-license --prefix=/usr/local
          cmake --version

      - uses: actions/checkout@v4

      - name: Configure
        env:
          CC: gcc
          CXX: g++
        run: >
          cmake -S . -B build
          -G Ninja
          -DCMAKE_BUILD_TYPE=Release
          -DLEO_BUILD_SHARED=ON
          -DLEO_BUILD_TESTS=OFF

      - name: Build
        run: cmake --build build --parallel

      - name: Run Showcase (headless via Xvfb)
        run: |
          xvfb-run -a -s "-screen 0 1280x720x24" \
            ./build/leo-engine-showcase --all --cicd

      - name: Package Linux Release
        run: |
          set -eux
          mkdir -p release/leo-engine-showcase-Linux
          cp -r build/leo-engine-showcase.Linux.Release/* release/leo-engine-showcase-Linux/
          cd release
          tar -czf ../leo-engine-showcase-Linux.tar.gz leo-engine-showcase-Linux

      - name: Upload Linux Release Package
        uses: actions/upload-artifact@v4
        with:
          name: leo-engine-showcase-Linux
          path: leo-engine-showcase-Linux.tar.gz

